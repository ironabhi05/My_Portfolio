import React, { useState } from "react";

import SSG from "../assets/SSG.png";
import portfolio from "../assets/portfolio.jpg";
import Lottery from "../assets/Lottery.jpg";
import Todo from "../assets/Todo List.png";
import Woogo from "../assets/Woogo.jpg";
import UI1 from "../assets/reactui1.jpg";
import UI2 from "../assets/reactui2.jpg";
import "./Portfoli.css";

const projects = [
    {
        id: 1,
        name: "Simon Says Game",
        category: "JavaScript",
        image: SSG,
        github: "https://github.com/yourusername/simon-says-game",
        link: "https://heroic-nasturtium-06a99c.netlify.app/",
        about: "A classic memory game where players repeat patterns generated by the computer.",
        description: "The Simon Says Game challenges users to memorize and repeat an increasingly complex series of colors. Built using HTML, CSS, and JavaScript, it helps improve memory and attention to detail."
    },
    {
        id: 2,
        name: "My Portfolio",
        category: "ReactJS",
        image: portfolio,
        github: "https://github.com/ironabhi05/My_Portfolio",
        link: "https://abhinavmishraportfolio.netlify.app/",
        about: "A personal portfolio website showcasing my projects, skills, and experiences.",
        description: "This portfolio is built using ReactJS, Tailwind CSS, and JSX to create a modern and fully responsive design. It highlights my projects, technical skills, and professional journey. The sleek UI, crafted with Tailwind CSS, ensures an engaging user experience while maintaining optimal performance across devices."
    },
    {
        id: 4,
        name: "Lottery Game",
        category: "ReactJS",
        image: Lottery,
        github: "https://github.com/ironabhi05/Lottery-Game",
        link: "https://thelotterygame.netlify.app/",
        about: "A ReactJS-based lottery game simulation where users can test their luck.",
        description: "The Lottery Game is a fun and interactive web application where users can participate in a digital lottery. Players select numbers, and if their choices meet specific winning criteria, they win exciting rewards! This project is built using modern web development technologies and provides a user-friendly interface for a seamless gaming experience."
    },
    {
        id: 5,
        name: "Woogo",
        category: "Python",
        image: Woogo,
        github: "https://github.com/Abdulrahman-Abdullahi/",
        link: "https://woogo.netlify.app/",
        about: "A social media platform where users can share their thoughts, ideas, and experiences.",
        description: "Woogo is a Python-powered web application that allows users to post and interact with others' content. It features user authentication, real-time updates, and an intuitive UI."
    },
    {
        id: 6,
        name: "Todo Game",
        category: "JavaScript",
        image: Todo,
        github: "https://github.com/ironabhi05/TODO-LIST",
        link: "https://ironabhi05.github.io/TODO-LIST/",
        about: "A gamified to-do list application to boost productivity.",
        description: "The Todo Game transforms task management into a game, rewarding users as they complete tasks. Built using JavaScript, it encourages productivity with a fun approach."
    },
    {
        id: 7,
        name: "UI (Material Ui)",
        category: "ReactJS",
        image: UI1,
        github: "https://github.com/ironabhi05/React_Project1",
        link: "https://ui1-demo.netlify.app/",
        about: "A ReactJS-based user interface project for modern web design.",
        description: "UI1 demonstrates advanced ReactJS UI/UX design principles, showcasing reusable components and a responsive layout tailored for diverse screen sizes."
    },
    {
        id: 8,
        name: "UI (Taiwind CSS, MUI)",
        category: "ReactJS",
        image: UI2,
        github: "https://github.com/yourusername/ui2",
        link: "https://ui2-demo.netlify.app/",
        about: "Another ReactJS UI project focused on elegant design patterns.",
        description: "UI2 is a responsive and visually appealing interface project built with ReactJS, emphasizing seamless user interaction and accessibility."
    },
];

function Portfolio() {
    const [filteredProjects, setFilteredProjects] = useState(projects);
    const [currentProjectId, setCurrentProjectId] = useState(null);

    const handleFilterClick = (category) => {
        const items =
            category === "all"
                ? projects
                : projects.filter((project) => project.category === category);
        setFilteredProjects(items);
    };

    const handleShow = (projectId) => {
        setCurrentProjectId(projectId);
    };

    const handleClose = () => {
        setCurrentProjectId(null);
    };
    return (
        <div id="portfolio" className="portfolio-main">
            <div className="Portfolio">
                <p
                    data-aos="fade-up"
                    className="text-center mb-2"
                    style={{ fontSize: "30px" }}
                >
                    <span className="bg-gradient-to-tr from-[#ff4694] to-[#776fff] text-blue px-2">
                        PORTFOLIO
                    </span>
                </p>
                <h1 data-aos="fade-up" className="text-center">
                    Some of my most recent projects
                </h1>

                <div className="project">
                    <div className="projectGroup py-24 sm:py-10 rounded-xl">
                        <div className="mx-auto max-w-7xl px-6 lg:px-8">

                            <div className="filter-buttons flex flex-wrap gap-4 mb-6">
                                <button onClick={() => handleFilterClick("all")}>All</button>
                                <button onClick={() => handleFilterClick("JavaScript")}>JavaScript</button>
                                <button onClick={() => handleFilterClick("ReactJS")}>ReactJS</button>
                                <button onClick={() => handleFilterClick("Python")}>Python</button>
                                <hr className="w-full mt-4" />
                            </div>

                            <dl className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-x-6 gap-y-10 text-center">
                                {filteredProjects.map((project) => (
                                    <div key={project.id} className="flex justify-center">
                                        <img
                                            className="project-img"
                                            src={project.image}
                                            alt={project.name}
                                            onClick={() => handleShow(project.id)}
                                            style={{ height: '200px', width: '300px', objectFit: 'contain' }}
                                        />
                                    </div>
                                ))}
                            </dl>
                        </div>
                    </div>
                </div>
            </div>
            <div className="HireBG">
                <div className="content">
                    <h1>Interested in working with me?</h1>
                    <a href="#contact"><button id="btn">HIRE ME</button></a>
                </div>
            </div>

            {/* Modals */}
            {projects.map(
                (project) =>
                    currentProjectId === project.id && (
                        <div
                            key={project.id}
                            className="fixed inset-0 z-50 flex items-center justify-center bg-gray-900 bg-opacity-50"
                        >
                            <div className="modal bg-white rounded-lg shadow-lg w-full mx-4 sm:w-4/5 md:w-2/3 lg:w-1/2 xl:w-1/3">
                                {/* Header */}
                                <div className="flex justify-between items-center border-b px-4 py-3">
                                    <h2 className="text-base md:text-lg lg:text-xl font-bold">
                                        {project.name}
                                    </h2>
                                    <button
                                        onClick={handleClose}
                                        className="text-gray-500 hover:text-gray-700 focus:outline-none text-xl md:text-2xl"
                                    >
                                        &times;
                                    </button>
                                </div>
                                {/* Content */}
                                <div className="p-4">
                                    {/* Image */}
                                    <div className="img p-4">
                                        <img
                                            src={project.image}
                                            alt={project.name}
                                            className="w-full h-auto object-cover rounded-md"
                                        />
                                    </div>

                                    {/* Details */}
                                    <div className="details p-4">
                                        <ul className="list-disc list-inside space-y-2 text-xs sm:text-sm md:text-base">
                                            <li>
                                                <b>About Project:</b>
                                                <p className="text-sm sm:text-base">{project.about}</p>
                                            </li>
                                            <li>
                                                <b>GitHub Link:</b>{" "}
                                                <a
                                                    href={project.github}
                                                    target="_blank"
                                                    rel="noopener noreferrer"
                                                    className="text-blue-500 hover:underline"
                                                >
                                                    Go to GitHub
                                                </a>
                                            </li>
                                            <li>
                                                <b>Game Link:</b>{" "}
                                                <a
                                                    href={project.link}
                                                    target="_blank"
                                                    rel="noopener noreferrer"
                                                    className="text-blue-500 hover:underline"
                                                >
                                                    Go to Site
                                                </a>
                                            </li>
                                        </ul>
                                    </div>

                                    {/* Description */}
                                    <div className="mt-4 text-xs sm:text-sm md:text-base leading-relaxed">
                                        <b>Game Description:</b>
                                        <hr />
                                        <p>{project.description}</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    )
            )}
        </div>
    );
}

export default Portfolio;
